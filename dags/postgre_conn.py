from airflow import DAG
from datetime import datetime, timedelta
from airflow.hooks.base_hook import BaseHook
from airflow.decorators import task
from airflow.operators.bash_operator import BashOperator
from airflow.operators.python_operator import PythonOperator
from airflow.operators.mysql_operator import MySqlOperator
from airflow.providers.mysql.hooks.mysql import MySqlHook
from airflow.operators.email_operator import EmailOperator
from datetime import datetime,timedelta

from airflow.providers.postgres.operators.postgres import PostgresOperator
from airflow.utils.task_group import TaskGroup
from sqlalchemy import create_engine
with DAG(
    dag_id="postgre_insert",
    start_date=datetime(2020, 2, 2),
    schedule_interval="@once",
    catchup=False,
) as dag:
    create_pet_table = PostgresOperator(
        task_id="create_pet_table",
        sql="""
                CREATE TABLE IF NOT EXISTS Store_Sales (
                ID INT generated by default as identity primary key ,
                STX_ID INT,
                STORE_NAME varchar(250),
                PAID_PRICE numeric(10,2),
                TRX_STATUS INT,
                STORE_STATUS INT,
                STORE_LIVE_DATE TIMESTAMP ,
                SALES_CREATE_DATE TIMESTAMP 
                );
                              """,
        postgres_conn_id='postgres_conn',
        dag=dag
    )